import Head from 'next/head';
import React, { useContext, useState } from 'react';
import { toast } from 'react-toastify';
import { TextField } from '../../src/general/text-field/TextField';
import { Header } from '../../src/main-page/header/Header';
import {
  validationType, validateEmail, validatePassword,
} from '../../src/utils/validate';
import { axiosInstance, setToken } from '../../src/axiosConfig';
import { useStyles } from '../../styles/login-page-styles';
import { InfoContext } from "../../src/contexts/InfoContext";

interface Login {
  password: string;
  email: string;
  emailError: validationType;
  passwordError: validationType;
}

export default function LoginPage() {
  const [state, setState] = useState<Login>({
    email: '',
    password: '',
    emailError: null,
    passwordError: null,
  });

  const info = useContext(InfoContext);

  const handleChangeEmail = (e: React.FormEvent<EventTarget>) => {
    const target = e.target as HTMLInputElement;
    setState({
      ...state,
      email: target.value,
      emailError: null,
    });
  };

  const handleChangePassword = (e: React.FormEvent<EventTarget>) => {
    const target = e.target as HTMLInputElement;
    setState({
      ...state,
      password: target.value,
      passwordError: null,
    });
  };

  const getRegisteremail = () => state.email;

  const getRegisterPassword = () => state.password;

  const getLoginParams = () => ({
    email: getRegisteremail(),
    password: getRegisterPassword(),
  });

  const formIsNotValid = () => !!validateEmail(state.email)
    || !!validatePassword(state.password);

  const handleSubmit = async (e: React.FormEvent<EventTarget>) => {
    e.preventDefault();
    setState({
      ...state,
      emailError: validateEmail(state.email),
      passwordError: validatePassword(state.password),
    });
    const params = getLoginParams();
    if (!formIsNotValid()) {
      try {
        const res = await axiosInstance.post("/user/login", params);
        setToken(res.data);
        const user = await axiosInstance.get("/user/check/auth");
        info.setInfo(user.data);
        toast("ورود موفقیت آمیز", { type: 'success' });
      } catch (err: any) {
        toast("ورود ناموفق", { type: 'error' });
        if (err.response.status === 409) toast("شماره قبلا ثبت شده است", { type: "error" });
      }
    }
  };
  const classes = useStyles();
  return (
    <div className={classes.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className={classes.main}>
        <p> فروشگاه - ورود </p>
        <div>
          <div className={classes.row}>
            <TextField
              width={200}
              error={state.emailError}
              onChange={handleChangeEmail}
              placeholder="ایمیل خود را وارد کنید"
              label="ایمیل"
              value={state.email}
            />
          </div>
          <div className={classes.row}>
            <TextField
              width={200}
              error={state.passwordError}
              onChange={handleChangePassword}
              placeholder="رمزعبور خود را وارد کنید"
              label="رمزعبور"
              value={state.password}
              type="password"
            />
          </div>
        </div>
        <button type="submit" onClick={handleSubmit} className={classes.button}> ورود </button>
      </div>
      <footer className={classes.footer}>
        تمامی حقوق برای سازندگان محفوظ است. .
      </footer>
    </div>
  );
}
