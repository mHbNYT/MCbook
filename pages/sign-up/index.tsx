import Head from 'next/head';
import React, { useState } from 'react';
import { toast } from 'react-toastify';
import { TextField } from '../../src/general/text-field/TextField';
import { Header } from '../../src/main-page/header/Header';
import {
  isName, validateEmail, validatePassword,
  validateName, validateLastName, validationType,
} from '../../src/utils/validate';
import { useStyles } from '../../styles/signup-page-styles';
import { axiosInstance } from '../../src/axiosConfig';

export interface SignUpState {
  password: string;
  firstName: string;
  firstNameError: validationType;
  lastName: string;
  lastNameError: validationType;
  email: string;
  emailError: validationType;
  passwordError: validationType;
}
export default function SignUp() {
  const [state, setState] = useState<SignUpState>({
    email: '',
    password: '',
    firstName: '',
    lastName: '',
    firstNameError: null,
    lastNameError: null,
    emailError: null,
    passwordError: null,
  });

  const handleChangeEmail = (e: React.FormEvent<EventTarget>) => {
    const target = e.target as HTMLInputElement;
    setState({
      ...state,
      email: target.value,
      emailError: null,
    });
  };

  const handleChangePassword = (e: React.FormEvent<EventTarget>) => {
    const target = e.target as HTMLInputElement;
    setState({
      ...state,
      password: target.value,
      passwordError: null,
    });
  };

  const handleChangeName = (e: React.FormEvent<EventTarget>) => {
    const target = e.target as HTMLInputElement;
    if (isName(target.value)) {
      setState({
        ...state,
        firstName: target.value,
        firstNameError: null,
      });
    }
  };

  const handleChangeLastName = (e: React.FormEvent<EventTarget>) => {
    const target = e.target as HTMLInputElement;
    if (isName(target.value)) {
      setState({
        ...state,
        lastName: target.value,
        lastNameError: null,
      });
    }
  };

  const getRegisterFirstName = () => state.firstName;

  const getRegisterLastName = () => state.lastName;

  const getRegisteremail = () => state.email;

  const getRegisterPassword = () => state.password;

  const getRegisterParams = () => ({
    firstName: getRegisterFirstName(),
    lastName: getRegisterLastName(),
    email: getRegisteremail(),
    password: getRegisterPassword(),
  });

  const formIsNotValid = () => !!validateEmail(state.email)
    || !!validatePassword(state.password)
    || !!validateName(state.firstName) || !!validateLastName(state.lastName);

  const handleSubmit = async (e: React.FormEvent<EventTarget>) => {
    e.preventDefault();
    setState({
      ...state,
      emailError: validateEmail(state.email),
      passwordError: validatePassword(state.password),
      firstNameError: validateName(state.firstName),
      lastNameError: validateLastName(state.lastName),
    });
    const params = getRegisterParams();
    if (!formIsNotValid()) {
      try {
        await axiosInstance.post("/user/signup", params);
        toast("ثبت نام موفقیت آمیز", { type: 'success' });
      } catch (err: any) {
        toast("ثبت نام ناموفق", { type: 'error' });
        if (err.response.status === 409) toast("شماره قبلا ثبت شده است", { type: "error" });
      }
    }
  };

  const classes = useStyles();
  return (
    <div className={classes.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className={classes.main}>
        <p> فروشگاه - ثبت‌نام </p>
        <div>
          <div className={classes.row}>
            <TextField
              width={200}
              error={state.firstNameError}
              onChange={handleChangeName}
              placeholder="نام خود را وارد کنید"
              label="نام"
              value={state.firstName}
            />
            <TextField
              width={200}
              error={state.lastNameError}
              onChange={handleChangeLastName}
              placeholder="نام خانوادگی خود را وارد کنید"
              label="نام خانوادگی"
              value={state.lastName}
            />
          </div>
          <div className={classes.row}>
            <TextField
              width={200}
              error={state.emailError}
              onChange={handleChangeEmail}
              label="ایمیل"
              placeholder="ایمیل خود را وارد کنید"
              value={state.email}
            />
            <TextField
              width={200}
              error={state.passwordError}
              onChange={handleChangePassword}
              label="رمزعبور"
              placeholder="رمزعبور خود را وارد کنید"
              value={state.password}
              type="password"
            />
          </div>
        </div>
        <button onClick={handleSubmit} type="submit" className={classes.button}> ثبت نام </button>
      </div>
      <footer className={classes.footer}>
        تمامی حقوق برای سازندگان محفوظ است.
      </footer>
    </div>
  );
}
